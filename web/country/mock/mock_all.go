// Code generated by MockGen. DO NOT EDIT.
// Source: ../country/all.go

// Package mock_country is a generated GoMock package.
package mock_country

import (
	context "context"
	entity "github.com/faceit/test/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockall is a mock of all interface
type Mockall struct {
	ctrl     *gomock.Controller
	recorder *MockallMockRecorder
}

// MockallMockRecorder is the mock recorder for Mockall
type MockallMockRecorder struct {
	mock *Mockall
}

// NewMockall creates a new mock instance
func NewMockall(ctrl *gomock.Controller) *Mockall {
	mock := &Mockall{ctrl: ctrl}
	mock.recorder = &MockallMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockall) EXPECT() *MockallMockRecorder {
	return m.recorder
}

// All mocks base method
func (m *Mockall) All(ctx context.Context) ([]entity.Country, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All", ctx)
	ret0, _ := ret[0].([]entity.Country)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All
func (mr *MockallMockRecorder) All(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*Mockall)(nil).All), ctx)
}
