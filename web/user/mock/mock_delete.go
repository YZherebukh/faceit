// Code generated by MockGen. DO NOT EDIT.
// Source: ../user/delete.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	context "context"
	entity "github.com/faceit/test/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockdelete is a mock of delete interface
type Mockdelete struct {
	ctrl     *gomock.Controller
	recorder *MockdeleteMockRecorder
}

// MockdeleteMockRecorder is the mock recorder for Mockdelete
type MockdeleteMockRecorder struct {
	mock *Mockdelete
}

// NewMockdelete creates a new mock instance
func NewMockdelete(ctrl *gomock.Controller) *Mockdelete {
	mock := &Mockdelete{ctrl: ctrl}
	mock.recorder = &MockdeleteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockdelete) EXPECT() *MockdeleteMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *Mockdelete) Delete(ctx context.Context, user entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockdeleteMockRecorder) Delete(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*Mockdelete)(nil).Delete), ctx, user)
}
