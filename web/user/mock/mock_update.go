// Code generated by MockGen. DO NOT EDIT.
// Source: ../user/update.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	context "context"
	entity "github.com/faceit/test/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockupdate is a mock of update interface
type Mockupdate struct {
	ctrl     *gomock.Controller
	recorder *MockupdateMockRecorder
}

// MockupdateMockRecorder is the mock recorder for Mockupdate
type MockupdateMockRecorder struct {
	mock *Mockupdate
}

// NewMockupdate creates a new mock instance
func NewMockupdate(ctrl *gomock.Controller) *Mockupdate {
	mock := &Mockupdate{ctrl: ctrl}
	mock.recorder = &MockupdateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockupdate) EXPECT() *MockupdateMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *Mockupdate) Update(ctx context.Context, u entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, u)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockupdateMockRecorder) Update(ctx, u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*Mockupdate)(nil).Update), ctx, u)
}
