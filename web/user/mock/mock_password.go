// Code generated by MockGen. DO NOT EDIT.
// Source: ../user/password.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockupdatePassword is a mock of updatePassword interface
type MockupdatePassword struct {
	ctrl     *gomock.Controller
	recorder *MockupdatePasswordMockRecorder
}

// MockupdatePasswordMockRecorder is the mock recorder for MockupdatePassword
type MockupdatePasswordMockRecorder struct {
	mock *MockupdatePassword
}

// NewMockupdatePassword creates a new mock instance
func NewMockupdatePassword(ctrl *gomock.Controller) *MockupdatePassword {
	mock := &MockupdatePassword{ctrl: ctrl}
	mock.recorder = &MockupdatePasswordMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockupdatePassword) EXPECT() *MockupdatePasswordMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *MockupdatePassword) Update(ctx context.Context, id int, new, old string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, id, new, old)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockupdatePasswordMockRecorder) Update(ctx, id, new, old interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockupdatePassword)(nil).Update), ctx, id, new, old)
}
